【APPRENTICE_日報_6】
日付:2023/10/21(土)
筆記者:義積拓野
〇行った事
①BJ製作(8h)
②コードレビュー、チームで現状報告(1h)
③AtCoder Beginners Contest325(以降ABC)(2h)
④Git,GitHub管理(1h)

①BJ
exit文で無理やりプログラムを終わらせると2重ループ抜けが綺麗に書けた。
途中に条件文を入れると補完機能でendが出ず忘れがちになるので注意しておく。
ずっと悩ませていたカード生成の被りが解消出来たので嬉しい。
勝敗判定もバーストの有無で条件分岐すれば良い感じに整理出来た。

②コードレビュー
少し課題が詰まり気味だったのでチームメンバーと話せてスッキリできた。
芳賀さんのコードの書き方がとても綺麗でとても参考になった。自分の綺麗だと思っていたコードが急に汚く見えてくる。
もっと可読性の意識を高く保ちたい。

③ABC325
Rubyでの初参加。
B問題で解き方の方針が立たず、思考がどんどん深みにはまり結局タイムアウト。区間スケジューリングかと思ったら全然そんなことなかった。
24時間しかないのに何で全探索しなかったのか...2重ループで十分計算間に合ったはず。
時間を24進数と捉えてmod24で処理するのは覚えておく。数学っぽく紙で式書いたほうが上手くいきそうだった。
標準入力も久しぶりにするとスラスラ書けなかったのでちゃんとRubyもまとめていつでも見れるようにしておく。

④Git,GitHub管理
QuestのプログラムをGit,GitHubで管理できるようにファイルを整理した。これでGitHubにあげられるところを明確化出来た。
今後はQuestと日報をGit管理してGitHubにpushしていく。
大きな変更を実装するときはしっかりコミットする意識。

〇これからやる事
・BJの単一責務意識のクラス化（）
・メンターさんと相談で話す事明確化

・チームプロダクトに必要なもの書き出し、整理、構想。

・AtCoder問題(Ruby)
・Xの投稿

〇全体感想
チームメンバーとの会話やABCで時間取られ過ぎてコーディングを深夜までやってしまった。
しかし他の人のコードみたり見てもらったりで違う視点が得られてよかった。

クラス関係なしにある程度作ったものをクラス化するより出来れば最初からクラスを意識して書きたい。書き始める前に設計をもっとしっかりやればよかったと後悔。
途中から組み込まれた関数を大きく変更するのは疲れるしバグりやすいので避けたい。