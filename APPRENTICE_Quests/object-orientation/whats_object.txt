# オブジェクト指向が何かを説明できる
# 1. オブジェクト指向の目的
# オブジェクト指向が何のためにあるのか、プログラミング初心者にわかるように説明してください。
オブジェクトはデータ（属性）、処理（メソッド）をまとめたもの
クラスはオブジェクトの構造を定義するための設計図のような仕組みで
１つクラスを作っておけばその設計図を再利用して同じデータ型をいくつもつくることが出来る


# 2. カプセル化
# オブジェクト指向におけるカプセル化とはどのような概念か、プログラミング初心者にわかるように説明してください。
オブジェクトの情報を守る（隠蔽する）ことによって、不整合を引き起こすような操作をできなくさせる仕組みです。
カプセルのように外から守られ包まれているデータを作ることにより
意図しないデータの書き換えなどを防ぐ仕組み
データを保護するが主目的

# 3. 継承
# オブジェクト指向における継承とはどのような概念か、プログラミング初心者にわかるように説明してください。
似た機能をもつあるクラスに対して共通の機能を共通の機能を抜き出すこと

# 4. ポリモーフィズム
# オブジェクト指向におけるポリモーフィズムとはどのような概念か、プログラミング初心者にわかるように説明してください。
同名の関数などを繰り返し定義することができ、
型ごとに別々の関数を用意しなくても一つの（共通の名前を持つ）関数としてまとめることができる

ある1つの関数（メソッド）の呼び出しに対し、オブジェクト毎に異なる動作をすること
同じ関数なのに違う動きをする
関数の挙動自体は使いまわせる

# オブジェクト指向の重要な設計原則である「単一責任の原則」について、プログラミング初心者にわかるように説明してください。
SRP
単一責任の原則とは、各クラスが1つの責務のみを持ち、その責任を完全に負うべきであるという原則です。
複数の責務を持つクラスが存在すると、それらの責務が密接に関連しているため、1つの責務を変更すると、他の責務にも影響が及ぶ可能性があります。

一つのクラスに一つの責務
変更の影響範囲を限定することが出来ⓡう
